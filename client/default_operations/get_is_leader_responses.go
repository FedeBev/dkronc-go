// Code generated by go-swagger; DO NOT EDIT.

package default_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetIsLeaderReader is a Reader for the GetIsLeader structure.
type GetIsLeaderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIsLeaderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIsLeaderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetIsLeaderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIsLeaderOK creates a GetIsLeaderOK with default headers values
func NewGetIsLeaderOK() *GetIsLeaderOK {
	return &GetIsLeaderOK{}
}

/* GetIsLeaderOK describes a response with status code 200, with default header values.

Node is a leader
*/
type GetIsLeaderOK struct {
}

func (o *GetIsLeaderOK) Error() string {
	return fmt.Sprintf("[GET /isleader][%d] getIsLeaderOK ", 200)
}

func (o *GetIsLeaderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIsLeaderNotFound creates a GetIsLeaderNotFound with default headers values
func NewGetIsLeaderNotFound() *GetIsLeaderNotFound {
	return &GetIsLeaderNotFound{}
}

/* GetIsLeaderNotFound describes a response with status code 404, with default header values.

Node is a follower
*/
type GetIsLeaderNotFound struct {
}

func (o *GetIsLeaderNotFound) Error() string {
	return fmt.Sprintf("[GET /isleader][%d] getIsLeaderNotFound ", 404)
}

func (o *GetIsLeaderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
