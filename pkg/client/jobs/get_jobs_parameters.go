// Code generated by go-swagger; DO NOT EDIT.

package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetJobsParams creates a new GetJobsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetJobsParams() *GetJobsParams {
	return &GetJobsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetJobsParamsWithTimeout creates a new GetJobsParams object
// with the ability to set a timeout on a request.
func NewGetJobsParamsWithTimeout(timeout time.Duration) *GetJobsParams {
	return &GetJobsParams{
		timeout: timeout,
	}
}

// NewGetJobsParamsWithContext creates a new GetJobsParams object
// with the ability to set a context for a request.
func NewGetJobsParamsWithContext(ctx context.Context) *GetJobsParams {
	return &GetJobsParams{
		Context: ctx,
	}
}

// NewGetJobsParamsWithHTTPClient creates a new GetJobsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetJobsParamsWithHTTPClient(client *http.Client) *GetJobsParams {
	return &GetJobsParams{
		HTTPClient: client,
	}
}

/* GetJobsParams contains all the parameters to send to the API endpoint
   for the get jobs operation.

   Typically these are written to a http.Request.
*/
type GetJobsParams struct {

	/* End.

	   End index
	*/
	End *int64

	/* Order.

	   Sort order (ASC/DESC)
	*/
	Order *string

	/* Sort.

	   Sorting field
	*/
	Sort *string

	/* Start.

	   Start index
	*/
	Start *int64

	/* Metadata.

	   Filter jobs by metadata
	*/
	Metadata []string

	/* Q.

	   Filter query text
	*/
	Q *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get jobs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetJobsParams) WithDefaults() *GetJobsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get jobs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetJobsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get jobs params
func (o *GetJobsParams) WithTimeout(timeout time.Duration) *GetJobsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get jobs params
func (o *GetJobsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get jobs params
func (o *GetJobsParams) WithContext(ctx context.Context) *GetJobsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get jobs params
func (o *GetJobsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get jobs params
func (o *GetJobsParams) WithHTTPClient(client *http.Client) *GetJobsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get jobs params
func (o *GetJobsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnd adds the end to the get jobs params
func (o *GetJobsParams) WithEnd(end *int64) *GetJobsParams {
	o.SetEnd(end)
	return o
}

// SetEnd adds the end to the get jobs params
func (o *GetJobsParams) SetEnd(end *int64) {
	o.End = end
}

// WithOrder adds the order to the get jobs params
func (o *GetJobsParams) WithOrder(order *string) *GetJobsParams {
	o.SetOrder(order)
	return o
}

// SetOrder adds the order to the get jobs params
func (o *GetJobsParams) SetOrder(order *string) {
	o.Order = order
}

// WithSort adds the sort to the get jobs params
func (o *GetJobsParams) WithSort(sort *string) *GetJobsParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get jobs params
func (o *GetJobsParams) SetSort(sort *string) {
	o.Sort = sort
}

// WithStart adds the start to the get jobs params
func (o *GetJobsParams) WithStart(start *int64) *GetJobsParams {
	o.SetStart(start)
	return o
}

// SetStart adds the start to the get jobs params
func (o *GetJobsParams) SetStart(start *int64) {
	o.Start = start
}

// WithMetadata adds the metadata to the get jobs params
func (o *GetJobsParams) WithMetadata(metadata []string) *GetJobsParams {
	o.SetMetadata(metadata)
	return o
}

// SetMetadata adds the metadata to the get jobs params
func (o *GetJobsParams) SetMetadata(metadata []string) {
	o.Metadata = metadata
}

// WithQ adds the q to the get jobs params
func (o *GetJobsParams) WithQ(q *string) *GetJobsParams {
	o.SetQ(q)
	return o
}

// SetQ adds the q to the get jobs params
func (o *GetJobsParams) SetQ(q *string) {
	o.Q = q
}

// WriteToRequest writes these params to a swagger request
func (o *GetJobsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.End != nil {

		// query param _end
		var qrEnd int64

		if o.End != nil {
			qrEnd = *o.End
		}
		qEnd := swag.FormatInt64(qrEnd)
		if qEnd != "" {

			if err := r.SetQueryParam("_end", qEnd); err != nil {
				return err
			}
		}
	}

	if o.Order != nil {

		// query param _order
		var qrOrder string

		if o.Order != nil {
			qrOrder = *o.Order
		}
		qOrder := qrOrder
		if qOrder != "" {

			if err := r.SetQueryParam("_order", qOrder); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param _sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("_sort", qSort); err != nil {
				return err
			}
		}
	}

	if o.Start != nil {

		// query param _start
		var qrStart int64

		if o.Start != nil {
			qrStart = *o.Start
		}
		qStart := swag.FormatInt64(qrStart)
		if qStart != "" {

			if err := r.SetQueryParam("_start", qStart); err != nil {
				return err
			}
		}
	}

	if o.Metadata != nil {

		// binding items for metadata
		joinedMetadata := o.bindParamMetadata(reg)

		// query array param metadata
		if err := r.SetQueryParam("metadata", joinedMetadata...); err != nil {
			return err
		}
	}

	if o.Q != nil {

		// query param q
		var qrQ string

		if o.Q != nil {
			qrQ = *o.Q
		}
		qQ := qrQ
		if qQ != "" {

			if err := r.SetQueryParam("q", qQ); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetJobs binds the parameter metadata
func (o *GetJobsParams) bindParamMetadata(formats strfmt.Registry) []string {
	metadataIR := o.Metadata

	var metadataIC []string
	for _, metadataIIR := range metadataIR { // explode []string

		metadataIIV := metadataIIR // string as string
		metadataIC = append(metadataIC, metadataIIV)
	}

	// items.CollectionFormat: "multi"
	metadataIS := swag.JoinByFormat(metadataIC, "multi")

	return metadataIS
}
