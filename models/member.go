// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Member A member represents a cluster member node.
//
// swagger:model member
type Member struct {

	// IP Address
	// Example: 192.168.1.137
	Addr string `json:"Addr,omitempty"`

	// Serf delegate protocol current version this node can understand or speak
	// Example: 4
	DelegateCur int64 `json:"DelegateCur,omitempty"`

	// Serf delegate protocol maximum version this node can understand or speak
	// Example: 5
	DelegateMax int64 `json:"DelegateMax,omitempty"`

	// Serf delegate protocol minimum version this node can understand or speak
	DelegateMin int64 `json:"DelegateMin,omitempty"`

	// Node name
	// Example: dkron1
	Name string `json:"Name,omitempty"`

	// Port number
	// Example: 8946
	Port int64 `json:"Port,omitempty"`

	// Serf protocol current version this node can understand or speak
	// Example: 2
	ProtocolCur int64 `json:"ProtocolCur,omitempty"`

	// Serf protocol maximum version this node can understand or speak
	// Example: 2
	ProtocolMax int64 `json:"ProtocolMax,omitempty"`

	// Serf protocol minimum version this node can understand or speak
	// Example: 5
	ProtocolMin int64 `json:"ProtocolMin,omitempty"`

	// The serf status of the node see: https://godoc.org/github.com/hashicorp/serf/serf#MemberStatus
	// Example: 1
	Status int64 `json:"Status,omitempty"`

	// Tags asociated with this node
	// Example: {"rpc_addr":"192.168.1.137:6868","server":"true","version\"":"1.0.0"}
	Tags map[string]string `json:"Tags,omitempty"`
}

// Validate validates this member
func (m *Member) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this member based on context it is used
func (m *Member) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Member) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Member) UnmarshalBinary(b []byte) error {
	var res Member
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
